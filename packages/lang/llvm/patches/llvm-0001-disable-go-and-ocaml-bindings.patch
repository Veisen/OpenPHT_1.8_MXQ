diff -Naur a/cmake/config-ix.cmake b/cmake/config-ix.cmake
--- a/cmake/config-ix.cmake	2016-06-21 12:34:40.000000000 -0700
+++ b/cmake/config-ix.cmake	2016-09-03 13:00:34.362142473 -0700
@@ -525,23 +525,7 @@
 endif()
 
 set(LLVM_BINDINGS "")
-if(WIN32)
-  message(STATUS "Go bindings disabled.")
-else()
-  find_program(GO_EXECUTABLE NAMES go DOC "go executable")
-  if(GO_EXECUTABLE STREQUAL "GO_EXECUTABLE-NOTFOUND")
-    message(STATUS "Go bindings disabled.")
-  else()
-    execute_process(COMMAND ${GO_EXECUTABLE} run ${PROJECT_SOURCE_DIR}/bindings/go/conftest.go
-                    RESULT_VARIABLE GO_CONFTEST)
-    if(GO_CONFTEST STREQUAL "0")
-      set(LLVM_BINDINGS "${LLVM_BINDINGS} go")
-      message(STATUS "Go bindings enabled.")
-    else()
-      message(STATUS "Go bindings disabled, need at least Go 1.2.")
-    endif()
-  endif()
-endif()
+message(STATUS "Go bindings disabled.")
 
 find_program(GOLD_EXECUTABLE NAMES ${LLVM_DEFAULT_TARGET_TRIPLE}-ld.gold ld.gold ${LLVM_DEFAULT_TARGET_TRIPLE}-ld ld DOC "The gold linker")
 set(LLVM_BINUTILS_INCDIR "" CACHE PATH
@@ -551,28 +535,6 @@
   find_program(LD64_EXECUTABLE NAMES ld DOC "The ld64 linker")
 endif()
 
-include(FindOCaml)
-include(AddOCaml)
-if(WIN32)
-  message(STATUS "OCaml bindings disabled.")
-else()
-  find_package(OCaml)
-  if( NOT OCAML_FOUND )
-    message(STATUS "OCaml bindings disabled.")
-  else()
-    if( OCAML_VERSION VERSION_LESS "4.00.0" )
-      message(STATUS "OCaml bindings disabled, need OCaml >=4.00.0.")
-    else()
-      find_ocamlfind_package(ctypes VERSION 0.4 OPTIONAL)
-      if( HAVE_OCAML_CTYPES )
-        message(STATUS "OCaml bindings enabled.")
-        find_ocamlfind_package(oUnit VERSION 2 OPTIONAL)
-        set(LLVM_BINDINGS "${LLVM_BINDINGS} ocaml")
-      else()
-        message(STATUS "OCaml bindings disabled, need ctypes >=0.4.")
-      endif()
-    endif()
-  endif()
-endif()
+message(STATUS "OCaml bindings disabled.")
 
 string(REPLACE " " ";" LLVM_BINDINGS_LIST "${LLVM_BINDINGS}")
